/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankDetailListRelationFilter } from "../../bankDetail/base/BankDetailListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BirthDetailsListRelationFilter } from "../../birthDetails/base/BirthDetailsListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { ChildListRelationFilter } from "../../child/base/ChildListRelationFilter";
import { EducationRecordListRelationFilter } from "../../educationRecord/base/EducationRecordListRelationFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { FamilyMemberListRelationFilter } from "../../familyMember/base/FamilyMemberListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { HealthRecordListRelationFilter } from "../../healthRecord/base/HealthRecordListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { MarriageCertificateListRelationFilter } from "../../marriageCertificate/base/MarriageCertificateListRelationFilter";
import { OtpListRelationFilter } from "../../otp/base/OtpListRelationFilter";
import { PassportDetailListRelationFilter } from "../../passportDetail/base/PassportDetailListRelationFilter";
import { SpouseListRelationFilter } from "../../spouse/base/SpouseListRelationFilter";
import { TravelDetailListRelationFilter } from "../../travelDetail/base/TravelDetailListRelationFilter";

@InputType()
class PersonWhereInput {
  @ApiProperty({
    required: false,
    type: () => BankDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BankDetailListRelationFilter)
  @IsOptional()
  @Field(() => BankDetailListRelationFilter, {
    nullable: true,
  })
  bankDetails?: BankDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BirthDetailsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BirthDetailsListRelationFilter)
  @IsOptional()
  @Field(() => BirthDetailsListRelationFilter, {
    nullable: true,
  })
  birthDetailsItems?: BirthDetailsListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  birthdate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ChildListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ChildListRelationFilter)
  @IsOptional()
  @Field(() => ChildListRelationFilter, {
    nullable: true,
  })
  children?: ChildListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateOfBirth?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EducationRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EducationRecordListRelationFilter)
  @IsOptional()
  @Field(() => EducationRecordListRelationFilter, {
    nullable: true,
  })
  educationRecords?: EducationRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  faceScan?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FamilyMemberListRelationFilter)
  @IsOptional()
  @Field(() => FamilyMemberListRelationFilter, {
    nullable: true,
  })
  familyMembers?: FamilyMemberListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  familyTree?: JsonFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  fingerPrintScan?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => HealthRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HealthRecordListRelationFilter)
  @IsOptional()
  @Field(() => HealthRecordListRelationFilter, {
    nullable: true,
  })
  healthRecords?: HealthRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MarriageCertificateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MarriageCertificateListRelationFilter)
  @IsOptional()
  @Field(() => MarriageCertificateListRelationFilter, {
    nullable: true,
  })
  marriageCertificates?: MarriageCertificateListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OtpListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OtpListRelationFilter)
  @IsOptional()
  @Field(() => OtpListRelationFilter, {
    nullable: true,
  })
  otps?: OtpListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PassportDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PassportDetailListRelationFilter)
  @IsOptional()
  @Field(() => PassportDetailListRelationFilter, {
    nullable: true,
  })
  passportDetails?: PassportDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SpouseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SpouseListRelationFilter)
  @IsOptional()
  @Field(() => SpouseListRelationFilter, {
    nullable: true,
  })
  spouses?: SpouseListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ssnNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TravelDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TravelDetailListRelationFilter)
  @IsOptional()
  @Field(() => TravelDetailListRelationFilter, {
    nullable: true,
  })
  travelDetails?: TravelDetailListRelationFilter;
}

export { PersonWhereInput as PersonWhereInput };
