/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankDetailUpdateManyWithoutPeopleInput } from "./BankDetailUpdateManyWithoutPeopleInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { BirthDetailsUpdateManyWithoutPeopleInput } from "./BirthDetailsUpdateManyWithoutPeopleInput";
import { ChildUpdateManyWithoutPeopleInput } from "./ChildUpdateManyWithoutPeopleInput";
import { EducationRecordUpdateManyWithoutPeopleInput } from "./EducationRecordUpdateManyWithoutPeopleInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { FamilyMemberUpdateManyWithoutPeopleInput } from "./FamilyMemberUpdateManyWithoutPeopleInput";
import { HealthRecordUpdateManyWithoutPeopleInput } from "./HealthRecordUpdateManyWithoutPeopleInput";
import { MarriageCertificateUpdateManyWithoutPeopleInput } from "./MarriageCertificateUpdateManyWithoutPeopleInput";
import { OtpUpdateManyWithoutPeopleInput } from "./OtpUpdateManyWithoutPeopleInput";
import { PassportDetailUpdateManyWithoutPeopleInput } from "./PassportDetailUpdateManyWithoutPeopleInput";
import { SpouseUpdateManyWithoutPeopleInput } from "./SpouseUpdateManyWithoutPeopleInput";
import { TravelDetailUpdateManyWithoutPeopleInput } from "./TravelDetailUpdateManyWithoutPeopleInput";

@InputType()
class PersonUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BankDetailUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => BankDetailUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => BankDetailUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  bankDetails?: BankDetailUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => BirthDetailsUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => BirthDetailsUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => BirthDetailsUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  birthDetailsItems?: BirthDetailsUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  birthdate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => ChildUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => ChildUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => ChildUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  children?: ChildUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: () => EducationRecordUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => EducationRecordUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => EducationRecordUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  educationRecords?: EducationRecordUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  faceScan?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => FamilyMemberUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => FamilyMemberUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => FamilyMemberUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  familyMembers?: FamilyMemberUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  familyTree?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  fingerPrintScan?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => HealthRecordUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => HealthRecordUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => HealthRecordUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  healthRecords?: HealthRecordUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => MarriageCertificateUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => MarriageCertificateUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => MarriageCertificateUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  marriageCertificates?: MarriageCertificateUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => OtpUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => OtpUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => OtpUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  otps?: OtpUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => PassportDetailUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => PassportDetailUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => PassportDetailUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  passportDetails?: PassportDetailUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => SpouseUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => SpouseUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => SpouseUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  spouses?: SpouseUpdateManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ssnNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => TravelDetailUpdateManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => TravelDetailUpdateManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => TravelDetailUpdateManyWithoutPeopleInput, {
    nullable: true,
  })
  travelDetails?: TravelDetailUpdateManyWithoutPeopleInput;
}

export { PersonUpdateInput as PersonUpdateInput };
