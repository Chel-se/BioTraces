/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  TravelDetail as PrismaTravelDetail,
  PassportDetail as PrismaPassportDetail,
  Person as PrismaPerson,
} from "@prisma/client";

export class TravelDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TravelDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.travelDetail.count(args);
  }

  async travelDetails(
    args: Prisma.TravelDetailFindManyArgs
  ): Promise<PrismaTravelDetail[]> {
    return this.prisma.travelDetail.findMany(args);
  }
  async travelDetail(
    args: Prisma.TravelDetailFindUniqueArgs
  ): Promise<PrismaTravelDetail | null> {
    return this.prisma.travelDetail.findUnique(args);
  }
  async createTravelDetail(
    args: Prisma.TravelDetailCreateArgs
  ): Promise<PrismaTravelDetail> {
    return this.prisma.travelDetail.create(args);
  }
  async updateTravelDetail(
    args: Prisma.TravelDetailUpdateArgs
  ): Promise<PrismaTravelDetail> {
    return this.prisma.travelDetail.update(args);
  }
  async deleteTravelDetail(
    args: Prisma.TravelDetailDeleteArgs
  ): Promise<PrismaTravelDetail> {
    return this.prisma.travelDetail.delete(args);
  }

  async getPassportDetail(
    parentId: string
  ): Promise<PrismaPassportDetail | null> {
    return this.prisma.travelDetail
      .findUnique({
        where: { id: parentId },
      })
      .passportDetail();
  }

  async getPerson(parentId: string): Promise<PrismaPerson | null> {
    return this.prisma.travelDetail
      .findUnique({
        where: { id: parentId },
      })
      .person();
  }
}
